version: "3"
services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    ports:
      - 13075:5432
    volumes:
      - postgres:/data/postgres
  backend:
    build: backend
    env_file: backend/.env
    environment:
      DB_TYPE: postgres
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: password
      DB_DATABASE: postgres
      PORT: 3000
    command: yarn start
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - 13076:3000
    depends_on:
      - db
  frontend:
    build: frontend
    env_file: frontend/.env
    environment:
      REACT_APP_WS_HOST: ws://localhost:13076
      PORT: 3000
    command: yarn start
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 13077:3000
    depends_on:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 29091:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://192.168.1.25:29091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      ALLOW_PLAINTEXT_LISTENER: "yes"
  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

volumes:
  postgres:
